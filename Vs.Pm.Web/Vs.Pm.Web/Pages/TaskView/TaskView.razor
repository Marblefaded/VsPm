@page "/task"
@inherits TaskViewCs
<body style="background-color:#FFF8DC">
    <div class="сontainer">
        <div class="row">
            <div class="col">
                <h3 style="margin-left:9%">
                    Task
                </h3>
            </div>
            @if (Model != null)
            {
                <div class="col col-lg-1">
                    <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Add" Color="Color.Error" @onclick="(() => AddItemDialog())">Create</MudButton>
                </div>
                <div class="col col-lg-2">
                    <input style="margin-right:100%" type="text" class="form-control-sm" placeholder="Search" @bind-value="@FilterValue" @bind-value:event="oninput" />
                </div>
            }
        </div>
    </div>
    @if (Model == null)
    {
        <MudGrid Justify="Justify.Center" Style="align-items: center; margin-top:250px">
            <MudProgressCircular Color="Color.Error" Size="Size.Large" Indeterminate="true" Style="position:absolute" />
        </MudGrid>
    }
    else
    {
        <MudTable Items="@Model" SortLabel="Sort" FixedHeader="true" Height="800px" Style="width: 90%; margin-left: 5%">
            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.TaskViewModel, object>(x=>x.TaskId)">
                        ID
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.TaskViewModel, object>(x=>x.Title)">
                        Title
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.TaskViewModel, object>(x=>x.Description)">
                        Description
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.ProjectViewModel, object>(x=>x.ProjectId)">
                        ProjectId
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.StatusViewModel, object>(x=>x.StatusId)">
                        StatusId
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.TaskTypeViewModel, object>(x=>x.TaskTypeId)">
                        TaskTypeId
                    </MudTableSortLabel>
                </MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate Context="item">
                <MudTd DataLabel="ID">@item.ProjectId</MudTd>
                <MudTd DataLabel="Title">@item.Title</MudTd>
                <MudTd DataLabel="Description">@item.Description</MudTd>
                <MudTd DataLabel="ProjectId">@(GetStatusNameP(item.ProjectId))</MudTd>
                <MudTd DataLabel="StatusId">@(GetStatusNameS(item.StatusId))</MudTd>
                <MudTd DataLabel="TaskTypeId">@(GetStatusNameT(item.TaskTypeId))</MudTd>
                <MudTd>
                    <MudTooltip Text="Edit">
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" Color="Color.Surface" @onclick="(() => EditItemDialog(item))"></MudIconButton>
                    </MudTooltip>
                    <MudTooltip Text="Delete">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" aria-label="delete" @onclick="(() => DeleteItemAsync(item))"></MudIconButton>
                    </MudTooltip>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager RowsPerPageString="Count of page" PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    }
</body>