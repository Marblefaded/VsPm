@page "/users"
@inherits UsersView
<body style="background-color:#FFF8DC">
    <div class="сontainer">
        <div class="row">
            <div class="col">
                <h3 style="margin-left:9%">
                    Users
                     

                    <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Outlined.Add" Color="Color.Error" @onclick="(() => AddItemDialog())">Create</MudButton>
                </h3>
            </div>
            @if (Model != null)
            {
                
            }
        </div>
    </div>
    @if (Model == null)
    {
        <MudGrid Justify="Justify.Center" Style="align-items: center; margin-top:250px">
            <MudProgressCircular Color="Color.Error" Size="Size.Large" Indeterminate="true" Style="position:absolute" />
        </MudGrid>
    }
    else
    {
        <MudTable Items="@Model" SortLabel="Sort" FixedHeader="true" Height="800px" Style="width: 90%; margin-left: 5%">
            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.UserViewModel, object>(x=>x.UserId)">
                        ID
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.UserViewModel, object>(x=>x.PersonName)">
                        Name
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.UserViewModel, object>(x=>x.PersonSurname)">
                        Surname
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.UserViewModel, object>(x=>x.Login)">
                        Login
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.UserViewModel, object>(x=>x.Password)">
                        Password
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<Data.ViewModel.UserViewModel, object>(x=>x.RoleId)">
                        RoleId
                    </MudTableSortLabel>
                </MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate Context="item">
                <MudTd DataLabel="ID">@item.UserId</MudTd>
                <MudTd DataLabel="Name">@item.PersonName</MudTd>
                <MudTd DataLabel="Surname">@item.PersonSurname</MudTd>
                <MudTd DataLabel="Login">@item.Login</MudTd>
                <MudTd DataLabel="Password">@item.Password</MudTd>
                <MudTd DataLabel="RoleId">@item.RoleId</MudTd>
                <MudTd>
                    <MudTooltip Text="Edit">
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" Color="Color.Surface" @onclick="(() => EditItemDialog(item))"></MudIconButton>
                    </MudTooltip>

                    <MudTooltip Text="Delete">
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" aria-label="delete" @onclick="(() => DeleteItemAsync(item))"></MudIconButton>
                    </MudTooltip>
                    <MudTooltip Text="Info">
                        <MudIconButton Icon="@Icons.Material.Filled.Outbound" Color="Color.Surface" @onclick="(() => ChangeLogInfo(item))"></MudIconButton>
                    </MudTooltip>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager RowsPerPageString="Count of page" PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    }
</body>